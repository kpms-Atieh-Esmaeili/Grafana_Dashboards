{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 21,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "P44368ADAD746BC27"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 20,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<!DOCTYPE html>\n<html>\n<head>\n<style>\n.theme-dark{\n  background-color:white;\n}\n.theme-light{\n  background-color:white;\n}\n\n.css-g43m4k{\nbackground-color: #A9A9A9;\nborder-radius: 50%;\nwidth: 15px;\nheight:15px;\nmargin-bottom:2px;\nmargin-right:2px;\n}\n\n</style>\n</head>\n<body>\n\n<div style=\"background-color:#F5F3F1;\">\n<a href=\"d/RgOQbI1Vz/homepage_inspection?orgId=1\">\n<img style=\"width:120px;background-color:#F5F3F1;padding-right:30px;\" src=\"public/img/logo_black.png\"></img></a>\n\n<h1 style=\"font-size: 20px;font-family:Arial;font-weight:bold;color:black;display:inline-block;vertical-align:middle;padding-top:10px;padding-left:20%\"for=\"html\">Torque Main Drive</h1>\n</div>\n\n</body>\n</html> ",
        "mode": "html"
      },
      "pluginVersion": "10.0.1",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P6E58CF9E1F3FE3DC"
      },
      "gridPos": {
        "h": 9,
        "w": 20,
        "x": 0,
        "y": 2
      },
      "id": 18,
      "options": {
        "config": {
          "displayModeBar": false
        },
        "data": [
          {
            "marker": {
              "color": "orange",
              "size": 2.5
            },
            "mode": "markers",
            "name": "InspectionName",
            "type": "scatter"
          },
          {
            "hovertext": "Average Value",
            "line": {
              "color": "#0060FF"
            },
            "mode": "lines",
            "name": "Average",
            "type": "line"
          },
          {
            "hovertext": "Minimum Value",
            "line": {
              "color": "#59941B"
            },
            "mode": "lines",
            "name": "Minimum",
            "type": "line"
          },
          {
            "hovertext": "Maximum value",
            "line": {
              "color": "#C62828"
            },
            "mode": "lines",
            "name": "Maximum",
            "type": "line"
          }
        ],
        "layout": {
          "margin": {
            "b": 40,
            "l": 35,
            "r": 20,
            "t": 5
          },
          "paper_bgcolor": "rgba(0,0,0,0)",
          "plot_bgcolor": "rgba(0,0,0,0)",
          "xaxis": {
            "automargin": true,
            "autorange": true,
            "color": "black",
            "mode": "markers",
            "range": [
              0,
              3.1648691427099056
            ],
            "title": {
              "font": {
                "family": "Arial"
              },
              "text": "Trigger count / No. of images taken"
            },
            "type": "linear"
          },
          "yaxis": {
            "automargin": true,
            "autorange": true,
            "color": "black",
            "mode": "markers",
            "range": [
              -491.6047889995259,
              7380.604788999526
            ],
            "title": {
              "font": {
                "family": "Arial"
              },
              "text": "Toolset_time"
            },
            "type": "linear"
          }
        },
        "onclick": "// console.log(data);\n// window.updateVariables({query:{'var-project':'test'}, partial: true})",
        "script": "let x = data.series[0].fields[0].values;\nlet y = data.series[0].fields[1].values;\nlet minimum= data.series[1].fields[0].values[0];\nlet average= data.series[1].fields[1].values[0];\nlet maximum= data.series[1].fields[2].values[0];\nlet trace1 = {\n  x: x,\n  y: y\n};\n\nlet trace2 ={\n y:y.map(y=>minimum)\n};\n\nlet trace3 ={\n y:y.map(y=>average)\n};\n\nlet trace4 ={\n y:y.map(y=>maximum)\n};\n\nreturn { data: [trace1,trace2,trace3,trace4] };",
        "yaml_mode": false
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P6E58CF9E1F3FE3DC"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  ROW_NUMBER() OVER(ORDER BY(SELECT NULL)) AS trigger,\n  trigger.data1_1 AS \"X\"\nFROM\n  trigger\n  LEFT JOIN batch ON trigger.batch_inspectionid = batch.batch_inspectionid\nWHERE\n  batch.batchname IN ($Batch_name) AND batch.svimname IN ('$Svim_name') \n  AND trigger.triggerindex IN ($trigger_index)\n  AND trigger.result1 IN ($inspection_result)\n  AND batch.inspectionname IN ('$Inspection_name')\n  AND TO_TIMESTAMP(trigger.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') >= $__timeFrom()\n  AND TO_TIMESTAMP(trigger.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') <= $__timeTo();\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "P6E58CF9E1F3FE3DC"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select avg(trigger.data1_1) as \"Average\",min(trigger.data1_1) as \"Minimum\",max(trigger.data1_1) as \"Maximum\"  from trigger LEFT JOIN batch\nON trigger.batch_inspectionid = batch.batch_inspectionid where batch.batchname in ($Batch_name) and trigger.triggerindex in ($trigger_index) and trigger.result1 in ($inspection_result) and batch.inspectionname in ('$Inspection_name') AND TO_TIMESTAMP(trigger.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') >= $__timeFrom()\n  AND TO_TIMESTAMP(trigger.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') <= $__timeTo();",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "${Inspection_name}",
      "transparent": true,
      "type": "nline-plotlyjs-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P6E58CF9E1F3FE3DC"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#bfb8b2",
                "value": null
              }
            ]
          },
          "unit": "Âµs"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 20,
        "y": 2
      },
      "id": 16,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "titleSize": 14,
          "valueSize": 14
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P6E58CF9E1F3FE3DC"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select avg(trigger.data1_1) as \"Average\",min(trigger.data1_1) as \"Minimum\",max(trigger.data1_1) as \"Maximum\"  from trigger LEFT JOIN batch\nON trigger.batch_inspectionid = batch.batch_inspectionid where batch.batchname in ($Batch_name) and trigger.triggerindex in ($trigger_index) and batch.svimname IN ('$Svim_name') and trigger.result1 in ($inspection_result) and batch.inspectionname in ('$Inspection_name') AND TO_TIMESTAMP(trigger.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') >= $__timeFrom()\n  AND TO_TIMESTAMP(trigger.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') <= $__timeTo();",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Overview",
      "transparent": true,
      "type": "stat"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "1489",
          "value": "1489"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P6E58CF9E1F3FE3DC"
        },
        "definition": "select distinct batch_inspectionid from trigger;",
        "hide": 2,
        "includeAll": false,
        "label": " ",
        "multi": false,
        "name": "Batches",
        "options": [],
        "query": "select distinct batch_inspectionid from trigger;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "03 random production",
          "value": "03 random production"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P6E58CF9E1F3FE3DC"
        },
        "definition": "select distinct batchname from batch\nWHERE TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') >= $__timeFrom()\n  AND TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') <= $__timeTo();",
        "hide": 0,
        "includeAll": false,
        "label": "Batchname",
        "multi": true,
        "name": "Batch_name",
        "options": [],
        "query": "select distinct batchname from batch\nWHERE TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') >= $__timeFrom()\n  AND TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') <= $__timeTo();",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "SVIM01",
          "value": "SVIM01"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P6E58CF9E1F3FE3DC"
        },
        "definition": "select distinct svimname from batch;",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Svim_name",
        "options": [],
        "query": "select distinct svimname from batch;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "Particle CB91",
          "value": "Particle CB91"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P6E58CF9E1F3FE3DC"
        },
        "definition": "SELECT DISTINCT inspectionname\nFROM batch\nWHERE TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') >= $__timeFrom()\n  AND TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') <= $__timeTo();",
        "hide": 0,
        "includeAll": false,
        "label": "InspectionName",
        "multi": false,
        "name": "Inspection_name",
        "options": [],
        "query": "SELECT DISTINCT inspectionname\nFROM batch\nWHERE TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') >= $__timeFrom()\n  AND TO_TIMESTAMP(batch.timestamp, 'YYYY-MM-DD HH24:MI:SS.FF3') <= $__timeTo();",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "inspection_result",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "Defect",
            "value": "0"
          },
          {
            "selected": false,
            "text": "Good Product",
            "value": "1"
          }
        ],
        "query": "Defect : 0,Good Product : 1",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P6E58CF9E1F3FE3DC"
        },
        "definition": "select distinct triggerindex from trigger;",
        "hide": 0,
        "includeAll": true,
        "label": "image_counter",
        "multi": true,
        "name": "trigger_index",
        "options": [],
        "query": "select distinct triggerindex from trigger;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 3,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2023-08-01T22:00:00.000Z",
    "to": "2023-08-03T21:59:59.000Z"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Toolset_torque Main Drive",
  "uid": "torque",
  "version": 8,
  "weekStart": ""
}